{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/francathais/Design-responsivo/blob/master/Analide%20de%20dados%20com%20Python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kdbz9Ns38oDy"
      },
      "source": [
        "#Analise de banco de dados"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "UTfaN1LqL-N9"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install plotly"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ICdxRxdhQinI",
        "outputId": "df273d0f-069c-4e5f-99b6-9d1e26f81447"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.7/dist-packages (5.5.0)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly) (8.0.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from plotly) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73,
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "ok": true,
              "status": 200,
              "status_text": "OK"
            }
          }
        },
        "id": "1oSoY8q788rq",
        "outputId": "725fbb7a-6784-49c1-b0e1-5a6a0b99d4a4"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-c3b6bf74-e564-40cd-9517-be15d60da80f\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-c3b6bf74-e564-40cd-9517-be15d60da80f\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving planodesaude.csv to planodesaude.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload() "
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd \n",
        "import io "
      ],
      "metadata": {
        "id": "OwesPNDKVcRA"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SbSkj7H4IAv9",
        "outputId": "18e8b4a3-db55-4d2c-9205-5662b29c1c82"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
            "0     male  Brazil   58  227.623.316-84   Green       90.7    RO     50\n",
            "1   female  Brazil   66  889.857.377-40   Black       71.7    MG     50\n",
            "2     male  Brazil   28  359.685.529-21  Orange       97.9    MG     50\n",
            "3   female  Brazil   41  826.397.388-01   Green       85.4    SP     50\n",
            "4     male  Brazil   47  956.044.481-68   Black       93.8    RJ     50\n",
            "5   female  Brazil   66  480.662.993-62  Purple       74.8    DF     50\n",
            "6   female  Brazil   22  697.605.540-11    Blue       88.1    BA     50\n",
            "7     male  Brazil   50  469.407.115-70    Blue       98.4    DF     50\n",
            "8   female  Brazil   49  316.659.429-91    Blue       79.3    PR     50\n",
            "9     male  Brazil   34  589.270.648-60    Blue       62.1    SC     50\n",
            "10    male  Brazil   42  683.928.606-16    Blue      104.7    MG     50\n",
            "11    male  Brazil   54  565.318.193-59   Green       81.1    MG     50\n",
            "12  female  Brazil   20  135.194.572-61  Purple       88.8    SC     50\n",
            "13  female  Brazil   47  187.412.106-03    Blue       87.6    SP     50\n",
            "14    male  Brazil   61  438.232.915-99   Black      110.4    SP     50\n",
            "15  female  Brazil   46  139.705.410-77    Blue      103.9    PR     50\n",
            "16    male  Brazil   33  562.953.821-77    Blue      102.0    SP     50\n",
            "17  female  Brazil   45  682.092.086-59   White       90.2    SP     50\n",
            "18  female  Brazil   22  153.037.111-29    Blue       65.7    RS     50\n",
            "19  female  Brazil   39  653.069.138-30   Green       90.0    SP     50\n",
            "20  female  Brazil   23  703.987.968-90    Blue       78.6    SP     50\n",
            "21  female  Brazil   63  217.504.487-42    Blue       60.5    SP     50\n",
            "22  female  Brazil   42  257.121.006-81     Red       52.8    TO     50\n",
            "23    male  Brazil   49  574.120.128-86  Orange      108.3    SP     50\n",
            "24    male  Brazil   50  535.317.116-01    Blue       74.4    PI     50\n",
            "25    male  Brazil   59  580.769.899-14    Blue      110.1    RJ     20\n",
            "26  female  Brazil   29  166.556.355-94   Green       90.8    SP     20\n",
            "27  female  Brazil   63  552.574.009-52    Blue       64.6    SP     20\n",
            "28    male  Brazil   20  295.643.970-73    Blue       73.8    SP     20\n",
            "29    male  Brazil   20  426.274.962-20   Black       58.4    PE     20\n",
            "30    male  Brazil   43  935.617.559-41    Blue       72.4    MG     20\n",
            "31  female  Brazil   23  833.746.178-08    Blue       68.4    SP     20\n",
            "32    male  Brazil   24  161.996.516-00    Blue       84.5    SP     20\n",
            "33  female  Brazil   40  331.125.949-16   Green       80.6    BA     20\n",
            "34  female  Brazil   66  709.232.163-83   Green       97.1    SP     20\n",
            "35    male  Brazil   52  159.092.874-19    Blue      108.8    BA     20\n",
            "36    male  Brazil   60  768.154.600-61    Blue      109.4    SP     20\n",
            "37    male  Brazil   51  299.996.761-62    Blue       91.3    SP     20\n",
            "38  female  Brazil   50  501.262.767-90  Silver       97.9    RJ     20\n",
            "39  female  Brazil   54  969.490.633-42   Green       68.7    AM     20\n",
            "40  female  Brazil   55  563.377.944-43  Orange       55.9    SP     20\n",
            "41  female  Brazil   42  137.946.870-19    Blue       67.7    PA     20\n",
            "42  female  Brazil   66  493.293.530-70    Blue       51.3    MT     20\n",
            "43  female  Brazil   24  200.947.620-40    Blue       48.0    SP     20\n",
            "44  female  Brazil   37  205.775.954-74  Purple      104.4    SP    100\n",
            "45    male  Brazil   58  668.574.815-04    Blue       97.1    SP    100\n",
            "46    male  Brazil   44  547.164.731-98    Blue       96.3    PR    100\n",
            "47  female  Brazil   41  814.348.219-78    Blue      102.9    DF    100\n",
            "48  female  Brazil   42  800.587.329-85   Green       65.6    GO    100\n",
            "49  female  Brazil   55  271.265.600-87   Green       54.4    SP    100\n",
            "50    male  Brazil   49  908.354.028-60    Blue      109.7    MG    100\n",
            "51    male  Brazil   40  723.806.636-02  Silver      100.8    ES    100\n",
            "52    male  Brazil   29  803.935.129-40     Red       97.8    PA    100\n",
            "53  female  Brazil   46  503.107.258-01   Brown       97.9    PR    100\n",
            "54  female  Brazil   65  548.844.236-74    Blue       51.0    SP    100\n"
          ]
        }
      ],
      "source": [
        "#Chamando pelo nome o arquivo: lista  \n",
        "lista = pd.read_csv(io.BytesIO(uploaded['planodesaude.csv']))\n",
        "#mostrar lista \n",
        "print(lista)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_lKbEYEguDdn",
        "outputId": "46c1d6e1-41f8-4fec-b930-8cb21d541d1b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(55, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "#conhecendo quantidade de inhas e colunas\n",
        "lista.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TGE5L1rp2Wto",
        "outputId": "ab9d0390-36f1-42e1-d456-a9b5f05c5dc1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 55 entries, 0 to 54\n",
            "Data columns (total 8 columns):\n",
            " #   Column      Non-Null Count  Dtype  \n",
            "---  ------      --------------  -----  \n",
            " 0   Gender      55 non-null     object \n",
            " 1   NameSet     55 non-null     object \n",
            " 2   Age         55 non-null     int64  \n",
            " 3   NationalID  55 non-null     object \n",
            " 4   Color       55 non-null     object \n",
            " 5   Kilograms   55 non-null     float64\n",
            " 6   State       55 non-null     object \n",
            " 7   Valor       55 non-null     int64  \n",
            "dtypes: float64(1), int64(2), object(5)\n",
            "memory usage: 3.6+ KB\n"
          ]
        }
      ],
      "source": [
        "#informações\n",
        "lista.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "HNP2vvzmvNnH",
        "outputId": "3e25100e-d27f-47f3-89dd-ee0626b2e31a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Age   Kilograms       Valor\n",
              "count  55.000000   55.000000   55.000000\n",
              "mean   44.436364   83.978182   49.636364\n",
              "std    13.918764   18.331754   28.736584\n",
              "min    20.000000   48.000000   20.000000\n",
              "25%    35.500000   68.550000   20.000000\n",
              "50%    46.000000   88.100000   50.000000\n",
              "75%    54.500000   97.900000   50.000000\n",
              "max    66.000000  110.400000  100.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c8d8e66e-4dc5-4f69-8213-f6c2ac99e37c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>55.000000</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>55.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>44.436364</td>\n",
              "      <td>83.978182</td>\n",
              "      <td>49.636364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13.918764</td>\n",
              "      <td>18.331754</td>\n",
              "      <td>28.736584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>20.000000</td>\n",
              "      <td>48.000000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>35.500000</td>\n",
              "      <td>68.550000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>46.000000</td>\n",
              "      <td>88.100000</td>\n",
              "      <td>50.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>54.500000</td>\n",
              "      <td>97.900000</td>\n",
              "      <td>50.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>66.000000</td>\n",
              "      <td>110.400000</td>\n",
              "      <td>100.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8d8e66e-4dc5-4f69-8213-f6c2ac99e37c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c8d8e66e-4dc5-4f69-8213-f6c2ac99e37c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c8d8e66e-4dc5-4f69-8213-f6c2ac99e37c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "#descrevendo banco de dados\n",
        "lista.describe()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista['State']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WOA9iRzlMepX",
        "outputId": "482a9df0-e5a1-448d-d515-eadcbacb4918"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     RO\n",
              "1     MG\n",
              "2     MG\n",
              "3     SP\n",
              "4     RJ\n",
              "5     DF\n",
              "6     BA\n",
              "7     DF\n",
              "8     PR\n",
              "9     SC\n",
              "10    MG\n",
              "11    MG\n",
              "12    SC\n",
              "13    SP\n",
              "14    SP\n",
              "15    PR\n",
              "16    SP\n",
              "17    SP\n",
              "18    RS\n",
              "19    SP\n",
              "20    SP\n",
              "21    SP\n",
              "22    TO\n",
              "23    SP\n",
              "24    PI\n",
              "25    RJ\n",
              "26    SP\n",
              "27    SP\n",
              "28    SP\n",
              "29    PE\n",
              "30    MG\n",
              "31    SP\n",
              "32    SP\n",
              "33    BA\n",
              "34    SP\n",
              "35    BA\n",
              "36    SP\n",
              "37    SP\n",
              "38    RJ\n",
              "39    AM\n",
              "40    SP\n",
              "41    PA\n",
              "42    MT\n",
              "43    SP\n",
              "44    SP\n",
              "45    SP\n",
              "46    PR\n",
              "47    DF\n",
              "48    GO\n",
              "49    SP\n",
              "50    MG\n",
              "51    ES\n",
              "52    PA\n",
              "53    PR\n",
              "54    SP\n",
              "Name: State, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista[\"Kilograms\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lEBNhMXrStZ8",
        "outputId": "077225c1-8a24-4def-f18b-578d387d9465"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      90.7\n",
              "1      71.7\n",
              "2      97.9\n",
              "3      85.4\n",
              "4      93.8\n",
              "5      74.8\n",
              "6      88.1\n",
              "7      98.4\n",
              "8      79.3\n",
              "9      62.1\n",
              "10    104.7\n",
              "11     81.1\n",
              "12     88.8\n",
              "13     87.6\n",
              "14    110.4\n",
              "15    103.9\n",
              "16    102.0\n",
              "17     90.2\n",
              "18     65.7\n",
              "19     90.0\n",
              "20     78.6\n",
              "21     60.5\n",
              "22     52.8\n",
              "23    108.3\n",
              "24     74.4\n",
              "25    110.1\n",
              "26     90.8\n",
              "27     64.6\n",
              "28     73.8\n",
              "29     58.4\n",
              "30     72.4\n",
              "31     68.4\n",
              "32     84.5\n",
              "33     80.6\n",
              "34     97.1\n",
              "35    108.8\n",
              "36    109.4\n",
              "37     91.3\n",
              "38     97.9\n",
              "39     68.7\n",
              "40     55.9\n",
              "41     67.7\n",
              "42     51.3\n",
              "43     48.0\n",
              "44    104.4\n",
              "45     97.1\n",
              "46     96.3\n",
              "47    102.9\n",
              "48     65.6\n",
              "49     54.4\n",
              "50    109.7\n",
              "51    100.8\n",
              "52     97.8\n",
              "53     97.9\n",
              "54     51.0\n",
              "Name: Kilograms, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilos_estado=lista[[\"Gender\", \"State\", \"Kilograms\"]].groupby([\"Gender\",\"State\"]).sum()\n",
        "print(kilos_estado) #Comparando kilogramas homens e mulheres por estado"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D8lUYgfn95f0",
        "outputId": "0c2d7117-3b49-41ae-b681-e6168f2205b1"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              Kilograms\n",
            "Gender State           \n",
            "female AM          68.7\n",
            "       BA         168.7\n",
            "       DF         177.7\n",
            "       GO          65.6\n",
            "       MG          71.7\n",
            "       MT          51.3\n",
            "       PA          67.7\n",
            "       PR         281.1\n",
            "       RJ          97.9\n",
            "       RS          65.7\n",
            "       SC          88.8\n",
            "       SP        1126.9\n",
            "       TO          52.8\n",
            "male   BA         108.8\n",
            "       DF          98.4\n",
            "       ES         100.8\n",
            "       MG         465.8\n",
            "       PA          97.8\n",
            "       PE          58.4\n",
            "       PI          74.4\n",
            "       PR          96.3\n",
            "       RJ         203.9\n",
            "       RO          90.7\n",
            "       SC          62.1\n",
            "       SP         776.8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilos_estado=lista[[\"Gender\", \"Kilograms\"]].groupby(\"Gender\").sum()\n",
        "print(kilos_estado)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0onurkFg-GrL",
        "outputId": "c447e9b8-6044-4df1-dbe7-96e5da233388"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        Kilograms\n",
            "Gender           \n",
            "female     2384.6\n",
            "male       2234.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilos_estado.plot(kind=\"bar\")\n",
        "#nome\n",
        "plt.title(\"Gráfico de kilos, separado por gênero\")\n",
        "#eixos\n",
        "plt.xlabel(\"Gênero\")\n",
        "plt.ylabel(\"Kilos\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "BqcoJRyb-QCM",
        "outputId": "95ea99f0-744c-4c8f-9d0f-b3972f776d12"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilos_estado.groupby(\"Gender\").mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 144
        },
        "id": "g9BAwjArC_RC",
        "outputId": "2491b54d-1de0-4afa-edbf-103679d8fc47"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Kilograms\n",
              "Gender           \n",
              "female     2384.6\n",
              "male       2234.2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f70788b5-1658-4648-90da-6d118bb5d12f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Kilograms</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>female</th>\n",
              "      <td>2384.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>male</th>\n",
              "      <td>2234.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f70788b5-1658-4648-90da-6d118bb5d12f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f70788b5-1658-4648-90da-6d118bb5d12f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f70788b5-1658-4648-90da-6d118bb5d12f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kilinhos=lista[\"Kilograms\"]\n",
        "print(kilinhos)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sde5dJ9lZ_tx",
        "outputId": "025d6248-75b2-4180-a603-fc951bd4b088"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0      90.7\n",
            "1      71.7\n",
            "2      97.9\n",
            "3      85.4\n",
            "4      93.8\n",
            "5      74.8\n",
            "6      88.1\n",
            "7      98.4\n",
            "8      79.3\n",
            "9      62.1\n",
            "10    104.7\n",
            "11     81.1\n",
            "12     88.8\n",
            "13     87.6\n",
            "14    110.4\n",
            "15    103.9\n",
            "16    102.0\n",
            "17     90.2\n",
            "18     65.7\n",
            "19     90.0\n",
            "20     78.6\n",
            "21     60.5\n",
            "22     52.8\n",
            "23    108.3\n",
            "24     74.4\n",
            "25    110.1\n",
            "26     90.8\n",
            "27     64.6\n",
            "28     73.8\n",
            "29     58.4\n",
            "30     72.4\n",
            "31     68.4\n",
            "32     84.5\n",
            "33     80.6\n",
            "34     97.1\n",
            "35    108.8\n",
            "36    109.4\n",
            "37     91.3\n",
            "38     97.9\n",
            "39     68.7\n",
            "40     55.9\n",
            "41     67.7\n",
            "42     51.3\n",
            "43     48.0\n",
            "44    104.4\n",
            "45     97.1\n",
            "46     96.3\n",
            "47    102.9\n",
            "48     65.6\n",
            "49     54.4\n",
            "50    109.7\n",
            "51    100.8\n",
            "52     97.8\n",
            "53     97.9\n",
            "54     51.0\n",
            "Name: Kilograms, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(sum(kilinhos)) #soma\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jqaa8nU_ZfL6",
        "outputId": "ea302cff-2df2-41d8-c3d0-4f73f83adae1"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4618.800000000001\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(max(kilinhos)) #maxima \n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FPlSk_nvaOjp",
        "outputId": "da9a3919-373d-4010-d765-1ccffe52eabc"
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "110.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(min(kilinhos)) #minima \n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ka2pwon1aTTo",
        "outputId": "24a75f58-ab3e-46d0-a655-ee9fee57c0d0"
      },
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "48.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(sum(kilinhos)/len(kilinhos)) #média"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0q_-2lTcaYjI",
        "outputId": "f2f82c42-8be8-468e-85a0-89215ede30cd"
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "83.97818181818184\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plt.scatter(lista['Age'],lista['Kilograms'])\n",
        "#nome\n",
        "#plt.title(\"Gráfico de Kilogramas\")\n",
        "#eixos\n",
        "#plt.xlabel(\"Kilogramas\")\n",
        "#plt.ylabel(\"Frequência\")\n",
        "#plt.xticks(rotation=50)\n",
        "#plt.yticks(rotation=45)\n",
        "#mostra\n",
        "#plt.show()"
      ],
      "metadata": {
        "id": "iW9iElGmSzWB"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#gráfico de frequência com título e eixos"
      ],
      "metadata": {
        "id": "oTQg78mTrfvV"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "7a5f05a3-bf18-41e7-d16a-a7ef488a774b",
        "id": "vc2qDwJ-p59m"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#gerar\n",
        "plt.hist(lista['State'])\n",
        "#nome\n",
        "plt.title(\"Habitante por estado nacional\")\n",
        "#eixos\n",
        "plt.xlabel(\"Estado\")\n",
        "plt.ylabel(\"Frequência\")\n",
        "#mostra\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Filtrando váriavel na tabela"
      ],
      "metadata": {
        "id": "02OWHcApN3lG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista['Color']  #filtrando apenas Color"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ip3GVCtPUlQ9",
        "outputId": "ef5c2d2e-5a6d-44e5-8b8a-4a907dff41bc"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      Green\n",
              "1      Black\n",
              "2     Orange\n",
              "3      Green\n",
              "4      Black\n",
              "5     Purple\n",
              "6       Blue\n",
              "7       Blue\n",
              "8       Blue\n",
              "9       Blue\n",
              "10      Blue\n",
              "11     Green\n",
              "12    Purple\n",
              "13      Blue\n",
              "14     Black\n",
              "15      Blue\n",
              "16      Blue\n",
              "17     White\n",
              "18      Blue\n",
              "19     Green\n",
              "20      Blue\n",
              "21      Blue\n",
              "22       Red\n",
              "23    Orange\n",
              "24      Blue\n",
              "25      Blue\n",
              "26     Green\n",
              "27      Blue\n",
              "28      Blue\n",
              "29     Black\n",
              "30      Blue\n",
              "31      Blue\n",
              "32      Blue\n",
              "33     Green\n",
              "34     Green\n",
              "35      Blue\n",
              "36      Blue\n",
              "37      Blue\n",
              "38    Silver\n",
              "39     Green\n",
              "40    Orange\n",
              "41      Blue\n",
              "42      Blue\n",
              "43      Blue\n",
              "44    Purple\n",
              "45      Blue\n",
              "46      Blue\n",
              "47      Blue\n",
              "48     Green\n",
              "49     Green\n",
              "50      Blue\n",
              "51    Silver\n",
              "52       Red\n",
              "53     Brown\n",
              "54      Blue\n",
              "Name: Color, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gerar\n",
        "plt.hist(lista['Color'])\n",
        "#nome\n",
        "plt.title(\"Frequência das cores\")\n",
        "#eixos\n",
        "plt.xlabel(\"Cores\")\n",
        "plt.ylabel(\"Frequência\")\n",
        "#mostra\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "btM4IrtPRTCm",
        "outputId": "c62cafd9-d98f-4c81-e020-1f14f446661f"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "hZbiMcRuMNT3"
      },
      "execution_count": 121,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Cores disponíveis: Green, Blue, Black, White, Orange, Purple,Silver, Red, Brown\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "mh-ZUJS-WMpf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista['Age'] #filtrando apenas Age"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3WpcYa4nscCJ",
        "outputId": "a73d4385-e839-4c16-9229-5525c4b5df52"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     58\n",
              "1     66\n",
              "2     28\n",
              "3     41\n",
              "4     47\n",
              "5     66\n",
              "6     22\n",
              "7     50\n",
              "8     49\n",
              "9     34\n",
              "10    42\n",
              "11    54\n",
              "12    20\n",
              "13    47\n",
              "14    61\n",
              "15    46\n",
              "16    33\n",
              "17    45\n",
              "18    22\n",
              "19    39\n",
              "20    23\n",
              "21    63\n",
              "22    42\n",
              "23    49\n",
              "24    50\n",
              "25    59\n",
              "26    29\n",
              "27    63\n",
              "28    20\n",
              "29    20\n",
              "30    43\n",
              "31    23\n",
              "32    24\n",
              "33    40\n",
              "34    66\n",
              "35    52\n",
              "36    60\n",
              "37    51\n",
              "38    50\n",
              "39    54\n",
              "40    55\n",
              "41    42\n",
              "42    66\n",
              "43    24\n",
              "44    37\n",
              "45    58\n",
              "46    44\n",
              "47    41\n",
              "48    42\n",
              "49    55\n",
              "50    49\n",
              "51    40\n",
              "52    29\n",
              "53    46\n",
              "54    65\n",
              "Name: Age, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gerar\n",
        "plt.hist(lista['Age'])\n",
        "#nome\n",
        "plt.title(\"Frequência de idade\")\n",
        "#eixos\n",
        "plt.xlabel(\"Idade\")\n",
        "plt.ylabel(\"Frequência\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "y6RX4tLdRfWM",
        "outputId": "931ea2f3-6210-43e7-89ba-ac4c82a40a86"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Formas de pesquisar informação na tabela"
      ],
      "metadata": {
        "id": "MQ7D1opGOGTX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista.loc[[0]] #localizando pessoa 0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "-SsiO8EbMizz",
        "outputId": "06c20b68-ef5a-41a2-b9d5-8bdc0a3bb477"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Gender NameSet  Age      NationalID  Color  Kilograms State  Valor\n",
              "0   male  Brazil   58  227.623.316-84  Green       90.7    RO     50"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b75addb-dbd4-4039-88b9-1aa8efab8428\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>NameSet</th>\n",
              "      <th>Age</th>\n",
              "      <th>NationalID</th>\n",
              "      <th>Color</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>State</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>58</td>\n",
              "      <td>227.623.316-84</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.7</td>\n",
              "      <td>RO</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b75addb-dbd4-4039-88b9-1aa8efab8428')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3b75addb-dbd4-4039-88b9-1aa8efab8428 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3b75addb-dbd4-4039-88b9-1aa8efab8428');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista.loc[[0,3]] #localizando pessoa 0 e 3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "YxRB17VhNjIn",
        "outputId": "fd35c61a-118b-4291-ec58-b2151cd25075"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Gender NameSet  Age      NationalID  Color  Kilograms State  Valor\n",
              "0    male  Brazil   58  227.623.316-84  Green       90.7    RO     50\n",
              "3  female  Brazil   41  826.397.388-01  Green       85.4    SP     50"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f72679c-9e93-4b90-8490-508fc7f539ee\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>NameSet</th>\n",
              "      <th>Age</th>\n",
              "      <th>NationalID</th>\n",
              "      <th>Color</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>State</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>58</td>\n",
              "      <td>227.623.316-84</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.7</td>\n",
              "      <td>RO</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>41</td>\n",
              "      <td>826.397.388-01</td>\n",
              "      <td>Green</td>\n",
              "      <td>85.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f72679c-9e93-4b90-8490-508fc7f539ee')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1f72679c-9e93-4b90-8490-508fc7f539ee button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1f72679c-9e93-4b90-8490-508fc7f539ee');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista.loc[0:3] #localizando pessoa do 0 ao 3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "-UeE6CaJNluA",
        "outputId": "6e76d5b6-189c-475b-b85b-c94bebf3eb71"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
              "0    male  Brazil   58  227.623.316-84   Green       90.7    RO     50\n",
              "1  female  Brazil   66  889.857.377-40   Black       71.7    MG     50\n",
              "2    male  Brazil   28  359.685.529-21  Orange       97.9    MG     50\n",
              "3  female  Brazil   41  826.397.388-01   Green       85.4    SP     50"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b1371311-5fec-4b78-baf8-176d7faa821c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>NameSet</th>\n",
              "      <th>Age</th>\n",
              "      <th>NationalID</th>\n",
              "      <th>Color</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>State</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>58</td>\n",
              "      <td>227.623.316-84</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.7</td>\n",
              "      <td>RO</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>889.857.377-40</td>\n",
              "      <td>Black</td>\n",
              "      <td>71.7</td>\n",
              "      <td>MG</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>28</td>\n",
              "      <td>359.685.529-21</td>\n",
              "      <td>Orange</td>\n",
              "      <td>97.9</td>\n",
              "      <td>MG</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>41</td>\n",
              "      <td>826.397.388-01</td>\n",
              "      <td>Green</td>\n",
              "      <td>85.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1371311-5fec-4b78-baf8-176d7faa821c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b1371311-5fec-4b78-baf8-176d7faa821c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b1371311-5fec-4b78-baf8-176d7faa821c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Filtrando pessoas de São Paulo"
      ],
      "metadata": {
        "id": "EH-4QQ-TQCtK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista.loc[ lista['State']=='SP'] #localizando só pessoas de SP"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 771
        },
        "id": "y5-ujDcXP9EJ",
        "outputId": "3cc58ee2-1029-4851-cff7-d2555382d18f"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
              "3   female  Brazil   41  826.397.388-01   Green       85.4    SP     50\n",
              "13  female  Brazil   47  187.412.106-03    Blue       87.6    SP     50\n",
              "14    male  Brazil   61  438.232.915-99   Black      110.4    SP     50\n",
              "16    male  Brazil   33  562.953.821-77    Blue      102.0    SP     50\n",
              "17  female  Brazil   45  682.092.086-59   White       90.2    SP     50\n",
              "19  female  Brazil   39  653.069.138-30   Green       90.0    SP     50\n",
              "20  female  Brazil   23  703.987.968-90    Blue       78.6    SP     50\n",
              "21  female  Brazil   63  217.504.487-42    Blue       60.5    SP     50\n",
              "23    male  Brazil   49  574.120.128-86  Orange      108.3    SP     50\n",
              "26  female  Brazil   29  166.556.355-94   Green       90.8    SP     20\n",
              "27  female  Brazil   63  552.574.009-52    Blue       64.6    SP     20\n",
              "28    male  Brazil   20  295.643.970-73    Blue       73.8    SP     20\n",
              "31  female  Brazil   23  833.746.178-08    Blue       68.4    SP     20\n",
              "32    male  Brazil   24  161.996.516-00    Blue       84.5    SP     20\n",
              "34  female  Brazil   66  709.232.163-83   Green       97.1    SP     20\n",
              "36    male  Brazil   60  768.154.600-61    Blue      109.4    SP     20\n",
              "37    male  Brazil   51  299.996.761-62    Blue       91.3    SP     20\n",
              "40  female  Brazil   55  563.377.944-43  Orange       55.9    SP     20\n",
              "43  female  Brazil   24  200.947.620-40    Blue       48.0    SP     20\n",
              "44  female  Brazil   37  205.775.954-74  Purple      104.4    SP    100\n",
              "45    male  Brazil   58  668.574.815-04    Blue       97.1    SP    100\n",
              "49  female  Brazil   55  271.265.600-87   Green       54.4    SP    100\n",
              "54  female  Brazil   65  548.844.236-74    Blue       51.0    SP    100"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-49e8e523-7cbb-4d2c-9f4c-927323f2d5e4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>NameSet</th>\n",
              "      <th>Age</th>\n",
              "      <th>NationalID</th>\n",
              "      <th>Color</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>State</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>41</td>\n",
              "      <td>826.397.388-01</td>\n",
              "      <td>Green</td>\n",
              "      <td>85.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>47</td>\n",
              "      <td>187.412.106-03</td>\n",
              "      <td>Blue</td>\n",
              "      <td>87.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>61</td>\n",
              "      <td>438.232.915-99</td>\n",
              "      <td>Black</td>\n",
              "      <td>110.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>33</td>\n",
              "      <td>562.953.821-77</td>\n",
              "      <td>Blue</td>\n",
              "      <td>102.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>45</td>\n",
              "      <td>682.092.086-59</td>\n",
              "      <td>White</td>\n",
              "      <td>90.2</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>39</td>\n",
              "      <td>653.069.138-30</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>23</td>\n",
              "      <td>703.987.968-90</td>\n",
              "      <td>Blue</td>\n",
              "      <td>78.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>63</td>\n",
              "      <td>217.504.487-42</td>\n",
              "      <td>Blue</td>\n",
              "      <td>60.5</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>49</td>\n",
              "      <td>574.120.128-86</td>\n",
              "      <td>Orange</td>\n",
              "      <td>108.3</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>29</td>\n",
              "      <td>166.556.355-94</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.8</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>63</td>\n",
              "      <td>552.574.009-52</td>\n",
              "      <td>Blue</td>\n",
              "      <td>64.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>20</td>\n",
              "      <td>295.643.970-73</td>\n",
              "      <td>Blue</td>\n",
              "      <td>73.8</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>23</td>\n",
              "      <td>833.746.178-08</td>\n",
              "      <td>Blue</td>\n",
              "      <td>68.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>24</td>\n",
              "      <td>161.996.516-00</td>\n",
              "      <td>Blue</td>\n",
              "      <td>84.5</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>709.232.163-83</td>\n",
              "      <td>Green</td>\n",
              "      <td>97.1</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>60</td>\n",
              "      <td>768.154.600-61</td>\n",
              "      <td>Blue</td>\n",
              "      <td>109.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>51</td>\n",
              "      <td>299.996.761-62</td>\n",
              "      <td>Blue</td>\n",
              "      <td>91.3</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>55</td>\n",
              "      <td>563.377.944-43</td>\n",
              "      <td>Orange</td>\n",
              "      <td>55.9</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>24</td>\n",
              "      <td>200.947.620-40</td>\n",
              "      <td>Blue</td>\n",
              "      <td>48.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>37</td>\n",
              "      <td>205.775.954-74</td>\n",
              "      <td>Purple</td>\n",
              "      <td>104.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>male</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>58</td>\n",
              "      <td>668.574.815-04</td>\n",
              "      <td>Blue</td>\n",
              "      <td>97.1</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>55</td>\n",
              "      <td>271.265.600-87</td>\n",
              "      <td>Green</td>\n",
              "      <td>54.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>65</td>\n",
              "      <td>548.844.236-74</td>\n",
              "      <td>Blue</td>\n",
              "      <td>51.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49e8e523-7cbb-4d2c-9f4c-927323f2d5e4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-49e8e523-7cbb-4d2c-9f4c-927323f2d5e4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-49e8e523-7cbb-4d2c-9f4c-927323f2d5e4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Criando dataframe só com SP e usando loc\n"
      ],
      "metadata": {
        "id": "X8BZvITKS2sj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SP=lista.loc[lista['State']=='SP'] #criando dataframe"
      ],
      "metadata": {
        "id": "kfmYWdpOQBfC"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(SP) #mostra"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wzuz3ltwSwcT",
        "outputId": "b872721c-2944-4901-a8a2-769698c4b588"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
            "3   female  Brazil   41  826.397.388-01   Green       85.4    SP     50\n",
            "13  female  Brazil   47  187.412.106-03    Blue       87.6    SP     50\n",
            "14    male  Brazil   61  438.232.915-99   Black      110.4    SP     50\n",
            "16    male  Brazil   33  562.953.821-77    Blue      102.0    SP     50\n",
            "17  female  Brazil   45  682.092.086-59   White       90.2    SP     50\n",
            "19  female  Brazil   39  653.069.138-30   Green       90.0    SP     50\n",
            "20  female  Brazil   23  703.987.968-90    Blue       78.6    SP     50\n",
            "21  female  Brazil   63  217.504.487-42    Blue       60.5    SP     50\n",
            "23    male  Brazil   49  574.120.128-86  Orange      108.3    SP     50\n",
            "26  female  Brazil   29  166.556.355-94   Green       90.8    SP     20\n",
            "27  female  Brazil   63  552.574.009-52    Blue       64.6    SP     20\n",
            "28    male  Brazil   20  295.643.970-73    Blue       73.8    SP     20\n",
            "31  female  Brazil   23  833.746.178-08    Blue       68.4    SP     20\n",
            "32    male  Brazil   24  161.996.516-00    Blue       84.5    SP     20\n",
            "34  female  Brazil   66  709.232.163-83   Green       97.1    SP     20\n",
            "36    male  Brazil   60  768.154.600-61    Blue      109.4    SP     20\n",
            "37    male  Brazil   51  299.996.761-62    Blue       91.3    SP     20\n",
            "40  female  Brazil   55  563.377.944-43  Orange       55.9    SP     20\n",
            "43  female  Brazil   24  200.947.620-40    Blue       48.0    SP     20\n",
            "44  female  Brazil   37  205.775.954-74  Purple      104.4    SP    100\n",
            "45    male  Brazil   58  668.574.815-04    Blue       97.1    SP    100\n",
            "49  female  Brazil   55  271.265.600-87   Green       54.4    SP    100\n",
            "54  female  Brazil   65  548.844.236-74    Blue       51.0    SP    100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# exemplo de gráfico de linha de Color, caso fosse um ados contínuos, ou seja, que não podem ser contados em números inteiros\n",
        "# Código: plt.plot(lista[\"Color\"])\n",
        "# plt.show"
      ],
      "metadata": {
        "id": "zxxL1PUVWyNv"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(lista[\"Age\"])\n",
        "#nome\n",
        "plt.title(\"Idade\")\n",
        "#eixos\n",
        "plt.xlabel(\"Idade\")\n",
        "plt.ylabel(\"Frequência\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "g_DBuYgk3t0-",
        "outputId": "9989f8b0-61c5-42ca-f5d3-d101a0a9cfe0"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Top>Down qual o valor mais utilizado "
      ],
      "metadata": {
        "id": "PHYSd7K6A_ip"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(lista[\"Valor\"])\n",
        "plt.ylim(10, 30)\n",
        "#plt.yscale('log')\n",
        "plt.show"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "YxcnVwTVBUYw",
        "outputId": "413ba53b-9938-4e5a-d949-44a046fba2fd"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function matplotlib.pyplot.show>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "escolha_de_valores=lista[[\"Valor\"]].groupby([\"Valor\"]).sum()\n",
        "print(escolha_de_valores)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ldW-tBkNPxwu",
        "outputId": "ebbfd6c1-b261-4fd9-ec3d-25dd616b39a7"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Empty DataFrame\n",
            "Columns: []\n",
            "Index: [20, 50, 100]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "idade=lista[\"Age\"]\n",
        "print(idade)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H3aJ4DnQQcHG",
        "outputId": "d7cc8dca-4b5d-4008-a568-4924d7d8ae3b"
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0     58\n",
            "1     66\n",
            "2     28\n",
            "3     41\n",
            "4     47\n",
            "5     66\n",
            "6     22\n",
            "7     50\n",
            "8     49\n",
            "9     34\n",
            "10    42\n",
            "11    54\n",
            "12    20\n",
            "13    47\n",
            "14    61\n",
            "15    46\n",
            "16    33\n",
            "17    45\n",
            "18    22\n",
            "19    39\n",
            "20    23\n",
            "21    63\n",
            "22    42\n",
            "23    49\n",
            "24    50\n",
            "25    59\n",
            "26    29\n",
            "27    63\n",
            "28    20\n",
            "29    20\n",
            "30    43\n",
            "31    23\n",
            "32    24\n",
            "33    40\n",
            "34    66\n",
            "35    52\n",
            "36    60\n",
            "37    51\n",
            "38    50\n",
            "39    54\n",
            "40    55\n",
            "41    42\n",
            "42    66\n",
            "43    24\n",
            "44    37\n",
            "45    58\n",
            "46    44\n",
            "47    41\n",
            "48    42\n",
            "49    55\n",
            "50    49\n",
            "51    40\n",
            "52    29\n",
            "53    46\n",
            "54    65\n",
            "Name: Age, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(sum(idade)) #soma\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-wYbTMXWUWVg",
        "outputId": "02af5598-52a7-4713-a014-3d70a61720f5"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2444\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(max(idade)) #maxima\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0BawipzNWq4i",
        "outputId": "d78a70f8-65d7-463c-e8a0-a230e69ef63a"
      },
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "66\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(min(idade)) #minima\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nIPdvE-sWrfx",
        "outputId": "51e9bd92-8526-4b79-82d9-9974ccc042c5"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(sum(idade)/len(idade)) #média\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cjoVpKV7W8SB",
        "outputId": "a476a0b2-0fca-4e71-e806-9593a7365ae4"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "44.43636363636364\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valores=lista[\"Valor\"]\n",
        "print(valores)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ArSmay3CS-RM",
        "outputId": "2a4205c9-3cee-4798-e6b7-afa03704f300"
      },
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0      50\n",
            "1      50\n",
            "2      50\n",
            "3      50\n",
            "4      50\n",
            "5      50\n",
            "6      50\n",
            "7      50\n",
            "8      50\n",
            "9      50\n",
            "10     50\n",
            "11     50\n",
            "12     50\n",
            "13     50\n",
            "14     50\n",
            "15     50\n",
            "16     50\n",
            "17     50\n",
            "18     50\n",
            "19     50\n",
            "20     50\n",
            "21     50\n",
            "22     50\n",
            "23     50\n",
            "24     50\n",
            "25     20\n",
            "26     20\n",
            "27     20\n",
            "28     20\n",
            "29     20\n",
            "30     20\n",
            "31     20\n",
            "32     20\n",
            "33     20\n",
            "34     20\n",
            "35     20\n",
            "36     20\n",
            "37     20\n",
            "38     20\n",
            "39     20\n",
            "40     20\n",
            "41     20\n",
            "42     20\n",
            "43     20\n",
            "44    100\n",
            "45    100\n",
            "46    100\n",
            "47    100\n",
            "48    100\n",
            "49    100\n",
            "50    100\n",
            "51    100\n",
            "52    100\n",
            "53    100\n",
            "54    100\n",
            "Name: Valor, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "vdgaRHE8Tn0x"
      },
      "execution_count": 132,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Valor pago por sexo"
      ],
      "metadata": {
        "id": "fdctzxuME8-L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_sexo=lista[[\"Gender\", \"Valor\"]]  #ver tabela de sexo por valor pago\n",
        "print(valor_por_sexo)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "quf90NEDCTW_",
        "outputId": "cbfaa44e-b191-4931-8e45-016b9605300b"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Gender  Valor\n",
            "0     male     50\n",
            "1   female     50\n",
            "2     male     50\n",
            "3   female     50\n",
            "4     male     50\n",
            "5   female     50\n",
            "6   female     50\n",
            "7     male     50\n",
            "8   female     50\n",
            "9     male     50\n",
            "10    male     50\n",
            "11    male     50\n",
            "12  female     50\n",
            "13  female     50\n",
            "14    male     50\n",
            "15  female     50\n",
            "16    male     50\n",
            "17  female     50\n",
            "18  female     50\n",
            "19  female     50\n",
            "20  female     50\n",
            "21  female     50\n",
            "22  female     50\n",
            "23    male     50\n",
            "24    male     50\n",
            "25    male     20\n",
            "26  female     20\n",
            "27  female     20\n",
            "28    male     20\n",
            "29    male     20\n",
            "30    male     20\n",
            "31  female     20\n",
            "32    male     20\n",
            "33  female     20\n",
            "34  female     20\n",
            "35    male     20\n",
            "36    male     20\n",
            "37    male     20\n",
            "38  female     20\n",
            "39  female     20\n",
            "40  female     20\n",
            "41  female     20\n",
            "42  female     20\n",
            "43  female     20\n",
            "44  female    100\n",
            "45    male    100\n",
            "46    male    100\n",
            "47  female    100\n",
            "48  female    100\n",
            "49  female    100\n",
            "50    male    100\n",
            "51    male    100\n",
            "52    male    100\n",
            "53  female    100\n",
            "54  female    100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_sexo=lista[[\"Gender\", \"Valor\"]].groupby(\"Gender\").sum()\n",
        "#calculando diferença de valor pago por homem e mulheres, agrupando os dados female/male\n",
        "print(valor_por_sexo)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z7iDK5h8FEYw",
        "outputId": "77a59f66-0563-4391-a2e1-eb9d6c37dd30"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        Valor\n",
            "Gender       \n",
            "female   1520\n",
            "male     1210\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_sexo.plot(kind=\"bar\")\n",
        "#nome\n",
        "plt.title(\"Valor pago por gênero\")\n",
        "#eixos\n",
        "plt.xlabel(\"Gênero\")\n",
        "plt.ylabel(\"Valor pago\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "HC9v63H6cW__",
        "outputId": "ea7f0098-0581-42e8-a86e-6a9f2286cc50"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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eVvobbbZJoYNG1Z0GWZmvcpDDz20MiKayi3bIMNi2LBhzJs3r+gyzMx6FUkdbzHzLndDmZlZLoeFmZnlcliYmVmuDXLMwsysO1atWkVraytvvfVW0aXURP/+/RkyZAj9+vWreBuHhZk1vNbWVrbcckuGDRvG2nd13/BEBC+88AKtra0MHz684u3cDWVmDe+tt95i0KBBG3xQAEhi0KBB3T6KcliYmUFDBEW79/JZHRZmZgXbf//9ue2229Zqu+yyyzj11LLPAGPMmDE1v5bMYxYFGnbu74suYYOy5KJDiy7BNhA9/buZ97M5fvx4ZsyYwYEHHvhu24wZM7j44ot75P3XrFlDnz591msfPrIwMyvYuHHj+P3vf88772QPD1yyZAnPPPMM06dPp7m5mV122YXJkyeX3Xb69Onstttu7Lrrrkya9O5Tftliiy0455xz+OhHP8p999233jU6LMzMCjZw4EBGjx7NLbfcAmRHFUcddRQXXHAB8+bNY+HChdx1110sXLhwre2eeeYZJk2axB133MGCBQuYO3cuv/3tbwF444032GuvvXjkkUfYd99917tGh4WZWR1o74qCLCzGjx/PzJkz2WOPPRg1ahSLFi1i8eLFa20zd+5cxowZQ1NTE3379uXYY4/l7rvvBqBPnz588Ytf7LH6HBZmZnVg7NixzJ49m4cffpg333yTgQMHcskllzB79mwWLlzIoYce2q3TXfv377/e4xSlHBZmZnVgiy22YP/99+fkk09m/PjxvPrqq2y++eZstdVWPPfcc+92UZUaPXo0d911FytXrmTNmjVMnz6d/fbbryr1+WwoM7M6MX78eD7/+c8zY8YMdt55Z0aNGsXOO+/M0KFD2WeffdZZf7vttuOiiy5i//33JyI49NBDGTt2bFVq2yCfwd3c3By94XkWPnW2Z/nUWXuvHnvsMT7ykY8UXUZNlfvMkh6KiOZy67sbyszMcjkszMwsl8PCzMxyOSzMzMhu3d0o3stndViYWcPr378/L7zwQkMERvvzLPr379+t7ap26qykKcBhwPMRsWuHZecAlwBNEbFS2f1yfwQcArwJnBgRD6d1TwC+kzb9fkRMrVbNZtaYhgwZQmtrK21tbUWXUhPtT8rrjmpeZ3Et8FNgWmmjpKHA54CnS5oPBkak117AFcBekgYCk4FmIICHJM2KiJeqWLeZ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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado=lista[[\"Gender\", \"State\", \"Valor\"]].groupby([\"Gender\",\"State\"]).sum()\n",
        "print(valor_por_estado) #Comparando o valor pago por homens e mulheres por estado\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x5E6cWXzJUCb",
        "outputId": "69ad29ee-fb0c-448a-e35c-e071bc005fdd"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              Valor\n",
            "Gender State       \n",
            "female AM        20\n",
            "       BA        70\n",
            "       DF       150\n",
            "       GO       100\n",
            "       MG        50\n",
            "       MT        20\n",
            "       PA        20\n",
            "       PR       200\n",
            "       RJ        20\n",
            "       RS        50\n",
            "       SC        50\n",
            "       SP       720\n",
            "       TO        50\n",
            "male   BA        20\n",
            "       DF        50\n",
            "       ES       100\n",
            "       MG       270\n",
            "       PA       100\n",
            "       PE        20\n",
            "       PI        50\n",
            "       PR       100\n",
            "       RJ        70\n",
            "       RO        50\n",
            "       SC        50\n",
            "       SP       330\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado.groupby(\"Gender\").median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 144
        },
        "id": "3eVFj5IjgFqj",
        "outputId": "e479006e-46ee-435b-f8af-d46879b1d69e"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Valor\n",
              "Gender       \n",
              "female   50.0\n",
              "male     60.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98417978-853d-435a-ad56-546230cf8ead\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>female</th>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>male</th>\n",
              "      <td>60.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98417978-853d-435a-ad56-546230cf8ead')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-98417978-853d-435a-ad56-546230cf8ead button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-98417978-853d-435a-ad56-546230cf8ead');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado.plot(kind=\"bar\")\n",
        "#nome\n",
        "plt.title(\"Valor pago, separado por gênero, com estado de residência\")\n",
        "#eixos\n",
        "plt.xlabel(\"Gênero e Estado\")\n",
        "plt.ylabel(\"Valor pago\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "d5b15279-aaa5-4367-b464-608b2f3a4665",
        "id": "mvBtqnqigGgz"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado.query('Gender==\"female\"')\n",
        "#filtrando female de valor_por_estado"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "CrVV9T5E3CC9",
        "outputId": "cbb811fa-6e70-4bee-82a2-61ad01ffd376"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Valor\n",
              "Gender State       \n",
              "female AM        20\n",
              "       BA        70\n",
              "       DF       150\n",
              "       GO       100\n",
              "       MG        50\n",
              "       MT        20\n",
              "       PA        20\n",
              "       PR       200\n",
              "       RJ        20\n",
              "       RS        50\n",
              "       SC        50\n",
              "       SP       720\n",
              "       TO        50"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f2d084a0-c542-4599-9f31-2c3ff645995f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th>State</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"13\" valign=\"top\">female</th>\n",
              "      <th>AM</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BA</th>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DF</th>\n",
              "      <td>150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GO</th>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MG</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MT</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PA</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PR</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RJ</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RS</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SC</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SP</th>\n",
              "      <td>720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TO</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2d084a0-c542-4599-9f31-2c3ff645995f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f2d084a0-c542-4599-9f31-2c3ff645995f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f2d084a0-c542-4599-9f31-2c3ff645995f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado1=valor_por_estado.query('Gender==\"female\"')\n",
        "print(valor_por_estado1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FPXiuHfB56kf",
        "outputId": "91c0fe97-9a2f-4afb-8ca9-01e8e5f951e6"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              Valor\n",
            "Gender State       \n",
            "female AM        20\n",
            "       BA        70\n",
            "       DF       150\n",
            "       GO       100\n",
            "       MG        50\n",
            "       MT        20\n",
            "       PA        20\n",
            "       PR       200\n",
            "       RJ        20\n",
            "       RS        50\n",
            "       SC        50\n",
            "       SP       720\n",
            "       TO        50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado1.plot(kind=\"bar\")\n",
        "#nome\n",
        "plt.title(\"Valor pago, gênero feminino, com estado de residência\")\n",
        "#eixos\n",
        "plt.xlabel(\"Gênero e Estado\")\n",
        "plt.ylabel(\"Valor pago\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "A1frcegC8X8Q",
        "outputId": "ff1a367f-0c38-4a51-abc5-15e26dddaaf8"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado.query('Gender==\"male\"')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457
        },
        "id": "qKf-Gml85vA5",
        "outputId": "fc3ace3c-7556-4921-9001-e2f2cb5dea9f"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Valor\n",
              "Gender State       \n",
              "male   BA        20\n",
              "       DF        50\n",
              "       ES       100\n",
              "       MG       270\n",
              "       PA       100\n",
              "       PE        20\n",
              "       PI        50\n",
              "       PR       100\n",
              "       RJ        70\n",
              "       RO        50\n",
              "       SC        50\n",
              "       SP       330"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c961c0a7-4fb2-421f-85d5-834619c3c281\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <th>State</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"12\" valign=\"top\">male</th>\n",
              "      <th>BA</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DF</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ES</th>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MG</th>\n",
              "      <td>270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PA</th>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PE</th>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PI</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PR</th>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RJ</th>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RO</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SC</th>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SP</th>\n",
              "      <td>330</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c961c0a7-4fb2-421f-85d5-834619c3c281')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c961c0a7-4fb2-421f-85d5-834619c3c281 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c961c0a7-4fb2-421f-85d5-834619c3c281');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado2=valor_por_estado.query('Gender==\"male\"')\n",
        "print(valor_por_estado1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "su159i_s8pgP",
        "outputId": "3f34e183-a1b6-49f2-8ac2-cbfe031e3820"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              Valor\n",
            "Gender State       \n",
            "female AM        20\n",
            "       BA        70\n",
            "       DF       150\n",
            "       GO       100\n",
            "       MG        50\n",
            "       MT        20\n",
            "       PA        20\n",
            "       PR       200\n",
            "       RJ        20\n",
            "       RS        50\n",
            "       SC        50\n",
            "       SP       720\n",
            "       TO        50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valor_por_estado2.plot(kind=\"bar\")\n",
        "#nome\n",
        "plt.title(\"Valor pago, gêreno masculino, com estado de residência\")\n",
        "#eixos\n",
        "plt.xlabel(\"Gênero e Estado\")\n",
        "plt.ylabel(\"Valor pago\")\n",
        "#mostra\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "UND3opCt8x7n",
        "outputId": "78f77a78-06da-452c-fe6a-3ef22d3accc5"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Extraindo por gênero (localizando)\n",
        "#Depois, criando dataframe\n"
      ],
      "metadata": {
        "id": "JFY3kxgmzBkD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lista.loc[ lista['Gender']=='female'] #localizando só pessoas de SP\n"
      ],
      "metadata": {
        "id": "8XR3t4ilDEWc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "a18dbfac-3319-473e-f3fd-ffce9502fac0"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
              "1   female  Brazil   66  889.857.377-40   Black       71.7    MG     50\n",
              "3   female  Brazil   41  826.397.388-01   Green       85.4    SP     50\n",
              "5   female  Brazil   66  480.662.993-62  Purple       74.8    DF     50\n",
              "6   female  Brazil   22  697.605.540-11    Blue       88.1    BA     50\n",
              "8   female  Brazil   49  316.659.429-91    Blue       79.3    PR     50\n",
              "12  female  Brazil   20  135.194.572-61  Purple       88.8    SC     50\n",
              "13  female  Brazil   47  187.412.106-03    Blue       87.6    SP     50\n",
              "15  female  Brazil   46  139.705.410-77    Blue      103.9    PR     50\n",
              "17  female  Brazil   45  682.092.086-59   White       90.2    SP     50\n",
              "18  female  Brazil   22  153.037.111-29    Blue       65.7    RS     50\n",
              "19  female  Brazil   39  653.069.138-30   Green       90.0    SP     50\n",
              "20  female  Brazil   23  703.987.968-90    Blue       78.6    SP     50\n",
              "21  female  Brazil   63  217.504.487-42    Blue       60.5    SP     50\n",
              "22  female  Brazil   42  257.121.006-81     Red       52.8    TO     50\n",
              "26  female  Brazil   29  166.556.355-94   Green       90.8    SP     20\n",
              "27  female  Brazil   63  552.574.009-52    Blue       64.6    SP     20\n",
              "31  female  Brazil   23  833.746.178-08    Blue       68.4    SP     20\n",
              "33  female  Brazil   40  331.125.949-16   Green       80.6    BA     20\n",
              "34  female  Brazil   66  709.232.163-83   Green       97.1    SP     20\n",
              "38  female  Brazil   50  501.262.767-90  Silver       97.9    RJ     20\n",
              "39  female  Brazil   54  969.490.633-42   Green       68.7    AM     20\n",
              "40  female  Brazil   55  563.377.944-43  Orange       55.9    SP     20\n",
              "41  female  Brazil   42  137.946.870-19    Blue       67.7    PA     20\n",
              "42  female  Brazil   66  493.293.530-70    Blue       51.3    MT     20\n",
              "43  female  Brazil   24  200.947.620-40    Blue       48.0    SP     20\n",
              "44  female  Brazil   37  205.775.954-74  Purple      104.4    SP    100\n",
              "47  female  Brazil   41  814.348.219-78    Blue      102.9    DF    100\n",
              "48  female  Brazil   42  800.587.329-85   Green       65.6    GO    100\n",
              "49  female  Brazil   55  271.265.600-87   Green       54.4    SP    100\n",
              "53  female  Brazil   46  503.107.258-01   Brown       97.9    PR    100\n",
              "54  female  Brazil   65  548.844.236-74    Blue       51.0    SP    100"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-44d825f3-8622-4e99-a266-f5182d1c6abc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>NameSet</th>\n",
              "      <th>Age</th>\n",
              "      <th>NationalID</th>\n",
              "      <th>Color</th>\n",
              "      <th>Kilograms</th>\n",
              "      <th>State</th>\n",
              "      <th>Valor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>889.857.377-40</td>\n",
              "      <td>Black</td>\n",
              "      <td>71.7</td>\n",
              "      <td>MG</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>41</td>\n",
              "      <td>826.397.388-01</td>\n",
              "      <td>Green</td>\n",
              "      <td>85.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>480.662.993-62</td>\n",
              "      <td>Purple</td>\n",
              "      <td>74.8</td>\n",
              "      <td>DF</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>22</td>\n",
              "      <td>697.605.540-11</td>\n",
              "      <td>Blue</td>\n",
              "      <td>88.1</td>\n",
              "      <td>BA</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>49</td>\n",
              "      <td>316.659.429-91</td>\n",
              "      <td>Blue</td>\n",
              "      <td>79.3</td>\n",
              "      <td>PR</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>20</td>\n",
              "      <td>135.194.572-61</td>\n",
              "      <td>Purple</td>\n",
              "      <td>88.8</td>\n",
              "      <td>SC</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>47</td>\n",
              "      <td>187.412.106-03</td>\n",
              "      <td>Blue</td>\n",
              "      <td>87.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>46</td>\n",
              "      <td>139.705.410-77</td>\n",
              "      <td>Blue</td>\n",
              "      <td>103.9</td>\n",
              "      <td>PR</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>45</td>\n",
              "      <td>682.092.086-59</td>\n",
              "      <td>White</td>\n",
              "      <td>90.2</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>22</td>\n",
              "      <td>153.037.111-29</td>\n",
              "      <td>Blue</td>\n",
              "      <td>65.7</td>\n",
              "      <td>RS</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>39</td>\n",
              "      <td>653.069.138-30</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>23</td>\n",
              "      <td>703.987.968-90</td>\n",
              "      <td>Blue</td>\n",
              "      <td>78.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>63</td>\n",
              "      <td>217.504.487-42</td>\n",
              "      <td>Blue</td>\n",
              "      <td>60.5</td>\n",
              "      <td>SP</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>42</td>\n",
              "      <td>257.121.006-81</td>\n",
              "      <td>Red</td>\n",
              "      <td>52.8</td>\n",
              "      <td>TO</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>29</td>\n",
              "      <td>166.556.355-94</td>\n",
              "      <td>Green</td>\n",
              "      <td>90.8</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>63</td>\n",
              "      <td>552.574.009-52</td>\n",
              "      <td>Blue</td>\n",
              "      <td>64.6</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>23</td>\n",
              "      <td>833.746.178-08</td>\n",
              "      <td>Blue</td>\n",
              "      <td>68.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>40</td>\n",
              "      <td>331.125.949-16</td>\n",
              "      <td>Green</td>\n",
              "      <td>80.6</td>\n",
              "      <td>BA</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>709.232.163-83</td>\n",
              "      <td>Green</td>\n",
              "      <td>97.1</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>50</td>\n",
              "      <td>501.262.767-90</td>\n",
              "      <td>Silver</td>\n",
              "      <td>97.9</td>\n",
              "      <td>RJ</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>54</td>\n",
              "      <td>969.490.633-42</td>\n",
              "      <td>Green</td>\n",
              "      <td>68.7</td>\n",
              "      <td>AM</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>55</td>\n",
              "      <td>563.377.944-43</td>\n",
              "      <td>Orange</td>\n",
              "      <td>55.9</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>42</td>\n",
              "      <td>137.946.870-19</td>\n",
              "      <td>Blue</td>\n",
              "      <td>67.7</td>\n",
              "      <td>PA</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>66</td>\n",
              "      <td>493.293.530-70</td>\n",
              "      <td>Blue</td>\n",
              "      <td>51.3</td>\n",
              "      <td>MT</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>24</td>\n",
              "      <td>200.947.620-40</td>\n",
              "      <td>Blue</td>\n",
              "      <td>48.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>37</td>\n",
              "      <td>205.775.954-74</td>\n",
              "      <td>Purple</td>\n",
              "      <td>104.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>41</td>\n",
              "      <td>814.348.219-78</td>\n",
              "      <td>Blue</td>\n",
              "      <td>102.9</td>\n",
              "      <td>DF</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>42</td>\n",
              "      <td>800.587.329-85</td>\n",
              "      <td>Green</td>\n",
              "      <td>65.6</td>\n",
              "      <td>GO</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>55</td>\n",
              "      <td>271.265.600-87</td>\n",
              "      <td>Green</td>\n",
              "      <td>54.4</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>46</td>\n",
              "      <td>503.107.258-01</td>\n",
              "      <td>Brown</td>\n",
              "      <td>97.9</td>\n",
              "      <td>PR</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>female</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>65</td>\n",
              "      <td>548.844.236-74</td>\n",
              "      <td>Blue</td>\n",
              "      <td>51.0</td>\n",
              "      <td>SP</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44d825f3-8622-4e99-a266-f5182d1c6abc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-44d825f3-8622-4e99-a266-f5182d1c6abc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-44d825f3-8622-4e99-a266-f5182d1c6abc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "female=lista.loc[lista['Gender']=='female'] #criando dataframe\n",
        "print(female)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E6NfzdlHzHCU",
        "outputId": "85ca9893-3f26-418e-efac-6cbf3ace19ec"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Gender NameSet  Age      NationalID   Color  Kilograms State  Valor\n",
            "1   female  Brazil   66  889.857.377-40   Black       71.7    MG     50\n",
            "3   female  Brazil   41  826.397.388-01   Green       85.4    SP     50\n",
            "5   female  Brazil   66  480.662.993-62  Purple       74.8    DF     50\n",
            "6   female  Brazil   22  697.605.540-11    Blue       88.1    BA     50\n",
            "8   female  Brazil   49  316.659.429-91    Blue       79.3    PR     50\n",
            "12  female  Brazil   20  135.194.572-61  Purple       88.8    SC     50\n",
            "13  female  Brazil   47  187.412.106-03    Blue       87.6    SP     50\n",
            "15  female  Brazil   46  139.705.410-77    Blue      103.9    PR     50\n",
            "17  female  Brazil   45  682.092.086-59   White       90.2    SP     50\n",
            "18  female  Brazil   22  153.037.111-29    Blue       65.7    RS     50\n",
            "19  female  Brazil   39  653.069.138-30   Green       90.0    SP     50\n",
            "20  female  Brazil   23  703.987.968-90    Blue       78.6    SP     50\n",
            "21  female  Brazil   63  217.504.487-42    Blue       60.5    SP     50\n",
            "22  female  Brazil   42  257.121.006-81     Red       52.8    TO     50\n",
            "26  female  Brazil   29  166.556.355-94   Green       90.8    SP     20\n",
            "27  female  Brazil   63  552.574.009-52    Blue       64.6    SP     20\n",
            "31  female  Brazil   23  833.746.178-08    Blue       68.4    SP     20\n",
            "33  female  Brazil   40  331.125.949-16   Green       80.6    BA     20\n",
            "34  female  Brazil   66  709.232.163-83   Green       97.1    SP     20\n",
            "38  female  Brazil   50  501.262.767-90  Silver       97.9    RJ     20\n",
            "39  female  Brazil   54  969.490.633-42   Green       68.7    AM     20\n",
            "40  female  Brazil   55  563.377.944-43  Orange       55.9    SP     20\n",
            "41  female  Brazil   42  137.946.870-19    Blue       67.7    PA     20\n",
            "42  female  Brazil   66  493.293.530-70    Blue       51.3    MT     20\n",
            "43  female  Brazil   24  200.947.620-40    Blue       48.0    SP     20\n",
            "44  female  Brazil   37  205.775.954-74  Purple      104.4    SP    100\n",
            "47  female  Brazil   41  814.348.219-78    Blue      102.9    DF    100\n",
            "48  female  Brazil   42  800.587.329-85   Green       65.6    GO    100\n",
            "49  female  Brazil   55  271.265.600-87   Green       54.4    SP    100\n",
            "53  female  Brazil   46  503.107.258-01   Brown       97.9    PR    100\n",
            "54  female  Brazil   65  548.844.236-74    Blue       51.0    SP    100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analise=lista[[\"Gender\", \"Valor\"]] #criei dataframe\n",
        "print(analise)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xz_DrGxHP9he",
        "outputId": "f6db0a30-049c-44ba-b244-e60fd0301b11"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Gender  Valor\n",
            "0     male     50\n",
            "1   female     50\n",
            "2     male     50\n",
            "3   female     50\n",
            "4     male     50\n",
            "5   female     50\n",
            "6   female     50\n",
            "7     male     50\n",
            "8   female     50\n",
            "9     male     50\n",
            "10    male     50\n",
            "11    male     50\n",
            "12  female     50\n",
            "13  female     50\n",
            "14    male     50\n",
            "15  female     50\n",
            "16    male     50\n",
            "17  female     50\n",
            "18  female     50\n",
            "19  female     50\n",
            "20  female     50\n",
            "21  female     50\n",
            "22  female     50\n",
            "23    male     50\n",
            "24    male     50\n",
            "25    male     20\n",
            "26  female     20\n",
            "27  female     20\n",
            "28    male     20\n",
            "29    male     20\n",
            "30    male     20\n",
            "31  female     20\n",
            "32    male     20\n",
            "33  female     20\n",
            "34  female     20\n",
            "35    male     20\n",
            "36    male     20\n",
            "37    male     20\n",
            "38  female     20\n",
            "39  female     20\n",
            "40  female     20\n",
            "41  female     20\n",
            "42  female     20\n",
            "43  female     20\n",
            "44  female    100\n",
            "45    male    100\n",
            "46    male    100\n",
            "47  female    100\n",
            "48  female    100\n",
            "49  female    100\n",
            "50    male    100\n",
            "51    male    100\n",
            "52    male    100\n",
            "53  female    100\n",
            "54  female    100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista.plot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V-yGvjEEZaVD",
        "outputId": "8750053c-1385-4614-c894-b42e963427e7"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.plotting._core.PlotAccessor object at 0x7f579952f5d0>"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#teste lista.plot(kind='hist')"
      ],
      "metadata": {
        "id": "FweFLHcKaKJM"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#exemplo grafico de linha: plt.plot(lista['Valor'], lista[\"Color\"])"
      ],
      "metadata": {
        "id": "jzo5r8KaaWu6"
      },
      "execution_count": 43,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "name": "reconquistando o python",
      "provenance": [],
      "authorship_tag": "ABX9TyNmkl8fHLqXqzbRp0ZgKJa2",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}